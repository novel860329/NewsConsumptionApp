apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.crashlytics'
android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.example.accessibility_detect"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    maven { url 'https://www.jitpack.io' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation "androidx.mediarouter:mediarouter:1.0.0"


    //implementation 'com.google.firebase:firebase-ml-vision:24.0.0'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    // (Recommended) Add the Google Analytics dependency.
//    implementation 'com.google.firebase:firebase-analytics:17.3.0'

    // Add the Firebase Crashlytics dependency.
//    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    // Add the Firebase Crashlytics SDK.
//    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'

    implementation 'com.firebase:firebase-client-android:2.4.0'//2.3.1

    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2' // 12/7

    // Recommended: Add the Google Analytics SDK.
    implementation 'com.google.firebase:firebase-analytics:17.4.2' // 12/7

//    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
//        transitive = true;
//    }
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "androidx.annotation:annotation:1.1.0"
    def room_version = "2.2.3"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation project(':opencsv-3.10')
    implementation project(':minukucore')
    implementation project(':minuku2-extended')
    implementation 'com.android.volley:volley:1.1.0'
    // for reactive
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.14'

    implementation 'com.github.warkiz.widget:indicatorseekbar:2.1.0'

    def camerax_version = "1.0.0-alpha06"
    // CameraX view library
    def camerax_view_version = "1.0.0-alpha03"
    // CameraX extensions library
    def camerax_ext_version = "1.0.0-alpha03"
    implementation "androidx.camera:camera-core:$camerax_version"
    // If you want to use Camera2 extensions
    implementation "androidx.camera:camera-camera2:$camerax_version"
    // If you to use the Camera View class
    implementation "androidx.camera:camera-view:$camerax_view_version"
    // If you to use Camera Extensions
    implementation "androidx.camera:camera-extensions:$camerax_ext_version"
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.google.code.gson:gson:2.2.4'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

//    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.+'
//    implementation 'com.isseiaoki:simplecropview:1.1.8'
    api("com.google.http-client:google-http-client:1.31.0") {
        exclude module: 'httpclient'
        exclude module: 'jsr305'
    }
    api ("com.google.api-client:google-api-client-android:1.30.2"){
        exclude module: 'httpclient'
        exclude module: 'jsr305'
    }
    api("com.google.apis:google-api-services-language:v1-rev477-1.25.0") {
        exclude module: 'httpclient'
        exclude module: 'jsr305'
    }
    implementation 'com.google.auth:google-auth-library-oauth2-http:0.17.1'
}
configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
//task copySecretKey(type: Copy) {
//    def File secretKey = file "$System.env.GOOGLE_APPLICATION_CREDENTIALS"
//    from secretKey.getParent()
//    include secretKey.getName()
//    into 'src/main/res/raw'
//    rename secretKey.getName(), "credential.json"
//}
//preBuild.dependsOn(copySecretKey)
// Add the Fabric plugin.